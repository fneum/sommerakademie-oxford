Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
n = pypsa.Network()
n.add("Bus", "electricity")

n.set_snapshots(ts.index)

carriers = {
    "wind": "dodgerblue",
    "solar": "gold",
    "AC": "navy",
    "electricity demand": "navy",
    "electrified heating": "steelblue",
    "oil": "black",
    "coal": "darkgray",
    "lignite": "sienna",
    "OCGT": "indianred",
    "CCGT": "firebrick",
    "biomass": "olivedrab",
    "nuclear": "orange",
    "battery storage 1h": "lightgreen",
    "battery storage 3h": "lightgreen",
    "battery storage 6h": "lightgreen",
    "hydrogen turbine": "blueviolet",
    "hydrogen import": "lavenderblush",
    "electrolysis": "orchid",
    "hydrogen storage": "hotpink",
    "hydrogen": "hotpink",
    "EV": "cadetblue",
    "EV demand": "cadetblue",
    "EV charger": "limegreen",
    "V2G": "limegreen",
    "EV battery": "teal",
}

emissions = {
    "wind": 0,
    "solar": 0,
    "AC": 0,
    "electrified heating": 0,
    "oil": 0.257,
    "coal": 0.336,
    "lignite": 0.407,
    "OCGT": 0.198,
    "CCGT": 0.198,
    "biomass": 0,
    "nuclear": 0,
    "battery storage 1h": 0,
    "battery storage 3h": 0,
    "battery storage 6h": 0,
    "hydrogen import": 0,
    "hydrogen turbine": 0,
    "electrolysis": 0,
    "hydrogen storage": 0,
    "hydrogen": 0,
    "EV": 0,
    "EV demand": 0,
    "EV charger": 0,
    "V2G": 0,
    "EV battery": 0,
}
n.add("Carrier", carriers.keys(), color=carriers.values(), co2_emissions=emissions);
------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pypsa/network/transform.py:203[39m, in [36mNetworkTransformMixin.add[39m[34m(self, class_name, name, suffix, overwrite, **kwargs)[39m
[32m    202[39m         [38;5;28;01melse[39;00m:
[32m--> [39m[32m203[39m             [43mv[49m[43m.[49m[43mindex[49m = names
[32m    204[39m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m e:

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pandas/core/generic.py:6332[39m, in [36mNDFrame.__setattr__[39m[34m(self, name, value)[39m
[32m   6331[39m     [38;5;28mobject[39m.[34m__getattribute__[39m([38;5;28mself[39m, name)
[32m-> [39m[32m6332[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mobject[39;49m[43m.[49m[34;43m__setattr__[39;49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mname[49m[43m,[49m[43m [49m[43mvalue[49m[43m)[49m
[32m   6333[39m [38;5;28;01mexcept[39;00m [38;5;167;01mAttributeError[39;00m:

[36mFile [39m[32mpandas/_libs/properties.pyx:69[39m, in [36mpandas._libs.properties.AxisProperty.__set__[39m[34m()[39m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pandas/core/generic.py:814[39m, in [36mNDFrame._set_axis[39m[34m(self, axis, labels)[39m
[32m    813[39m labels = ensure_index(labels)
[32m--> [39m[32m814[39m [38;5;28;43mself[39;49m[43m.[49m[43m_mgr[49m[43m.[49m[43mset_axis[49m[43m([49m[43maxis[49m[43m,[49m[43m [49m[43mlabels[49m[43m)[49m
[32m    815[39m [38;5;28mself[39m._clear_item_cache()

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pandas/core/internals/managers.py:238[39m, in [36mBaseBlockManager.set_axis[39m[34m(self, axis, new_labels)[39m
[32m    236[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mset_axis[39m([38;5;28mself[39m, axis: AxisInt, new_labels: Index) -> [38;5;28;01mNone[39;00m:
[32m    237[39m     [38;5;66;03m# Caller is responsible for ensuring we have an Index object.[39;00m
[32m--> [39m[32m238[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_validate_set_axis[49m[43m([49m[43maxis[49m[43m,[49m[43m [49m[43mnew_labels[49m[43m)[49m
[32m    239[39m     [38;5;28mself[39m.axes[axis] = new_labels

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pandas/core/internals/base.py:98[39m, in [36mDataManager._validate_set_axis[39m[34m(self, axis, new_labels)[39m
[32m     97[39m [38;5;28;01melif[39;00m new_len != old_len:
[32m---> [39m[32m98[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m     99[39m         [33mf[39m[33m"[39m[33mLength mismatch: Expected axis has [39m[38;5;132;01m{[39;00mold_len[38;5;132;01m}[39;00m[33m elements, new [39m[33m"[39m
[32m    100[39m         [33mf[39m[33m"[39m[33mvalues have [39m[38;5;132;01m{[39;00mnew_len[38;5;132;01m}[39;00m[33m elements[39m[33m"[39m
[32m    101[39m     )

[31mValueError[39m: Length mismatch: Expected axis has 24 elements, new values have 25 elements

The above exception was the direct cause of the following exception:

[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[6][39m[32m, line 60[39m
[32m      6[39m carriers = {
[32m      7[39m     [33m"[39m[33mwind[39m[33m"[39m: [33m"[39m[33mdodgerblue[39m[33m"[39m,
[32m      8[39m     [33m"[39m[33msolar[39m[33m"[39m: [33m"[39m[33mgold[39m[33m"[39m,
[32m   (...)[39m[32m     31[39m     [33m"[39m[33mEV battery[39m[33m"[39m: [33m"[39m[33mteal[39m[33m"[39m,
[32m     32[39m }
[32m     34[39m emissions = {
[32m     35[39m     [33m"[39m[33mwind[39m[33m"[39m: [32m0[39m,
[32m     36[39m     [33m"[39m[33msolar[39m[33m"[39m: [32m0[39m,
[32m   (...)[39m[32m     58[39m     [33m"[39m[33mEV battery[39m[33m"[39m: [32m0[39m,
[32m     59[39m }
[32m---> [39m[32m60[39m [43mn[49m[43m.[49m[43madd[49m[43m([49m[33;43m"[39;49m[33;43mCarrier[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43mcarriers[49m[43m.[49m[43mkeys[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mcolor[49m[43m=[49m[43mcarriers[49m[43m.[49m[43mvalues[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mco2_emissions[49m[43m=[49m[43memissions[49m[43m)[49m;

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pypsa/network/transform.py:211[39m, in [36mNetworkTransformMixin.add[39m[34m(self, class_name, name, suffix, overwrite, **kwargs)[39m
[32m    205[39m         expec_str = (
[32m    206[39m             [33mf[39m[33m"[39m[38;5;132;01m{[39;00m[38;5;28mlen[39m([38;5;28mself[39m.snapshots)[38;5;132;01m}[39;00m[33m for each snapshot.[39m[33m"[39m
[32m    207[39m             [38;5;28;01mif[39;00m single_component
[32m    208[39m             [38;5;28;01melse[39;00m [33mf[39m[33m"[39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(names)[38;5;132;01m}[39;00m[33m for each component name.[39m[33m"[39m
[32m    209[39m         )
[32m    210[39m         msg = [33mf[39m[33m"[39m[33mData for [39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[33m has length [39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(v)[38;5;132;01m}[39;00m[33m but expected [39m[38;5;132;01m{[39;00mexpec_str[38;5;132;01m}[39;00m[33m"[39m
[32m--> [39m[32m211[39m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(msg) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01me[39;00m
[32m    212[39m [38;5;66;03m# Convert 2-dim array to pandas.DataFrame[39;00m
[32m    213[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(v, np.ndarray):

[31mValueError[39m: Data for co2_emissions has length 24 but expected 25 for each component name.

